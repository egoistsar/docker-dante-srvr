#!/bin/bash

set -e

# --- –ü–ê–†–°–ò–ù–ì –ê–†–ì–£–ú–ï–ù–¢–û–í ---
while [[ "$#" -gt 0 ]]; do
  case $1 in
    --port)
      PORT="$2"
      shift 2
      ;;
    --user)
      USERNAME="$2"
      shift 2
      ;;
    --pass)
      PASSWORD="$2"
      shift 2
      ;;
    --env-file)
      ENV_FILE="$2"
      shift 2
      ;;
    *)
      echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: $1"
      exit 1
      ;;
  esac
done

# --- –ü–û–î–ì–†–£–ó–ö–ê .env –§–ê–ô–õ–ê –ï–°–õ–ò –£–ö–ê–ó–ê–ù ---
if [[ -n "$ENV_FILE" ]]; then
  if [[ -f "$ENV_FILE" ]]; then
    echo "üìÑ –ó–∞–≥—Ä—É–∂–∞—é –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ $ENV_FILE"
    export $(grep -v '^#' "$ENV_FILE" | xargs)
  else
    echo "‚ùå –§–∞–π–ª $ENV_FILE –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
  fi
fi

# --- –ü–†–û–í–ï–†–ö–ê –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–• –ü–ï–†–ï–ú–ï–ù–ù–´–• ---
: "${PORT:?‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è --port}"
: "${USERNAME:?‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è --user}"
: "${PASSWORD:?‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è --pass}"

# --- –ü–†–û–í–ï–†–ö–ê ROOT ---
if [[ $EUID -ne 0 ]]; then
  echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ—Ç root"
  exit 1
fi

# --- –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ---
DEPS=(curl git docker.io sudo iptables systemd systemd-sysv net-tools)
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
for pkg in "${DEPS[@]}"; do
  if ! dpkg -s "$pkg" >/dev/null 2>&1; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é: $pkg"
    apt update && apt install -y "$pkg"
  else
    echo "‚úÖ $pkg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
  fi
done

# --- –ó–ê–ü–£–°–ö DOCKER ---
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ Docker..."
systemctl enable docker
systemctl start docker
sleep 2

# --- –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–û–°–¢–ò DOCKER ---
if ! docker info >/dev/null 2>&1; then
  echo "‚ö†Ô∏è Docker –¥–µ–º–æ–Ω –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–±—É—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
  systemctl restart docker
  sleep 5
  if ! docker info >/dev/null 2>&1; then
    echo "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker –¥–∞–∂–µ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞. –ó–∞–≤–µ—Ä—à–∞–µ–º."
    exit 1
  fi
fi

# --- –ö–õ–û–ù–ò–†–û–í–ê–ù–ò–ï –†–ï–ü–û–ó–ò–¢–û–†–ò–Ø ---
if [ ! -d "docker-dante-srvr" ]; then
  git clone https://github.com/egoistsar/docker-dante-srvr.git
fi
cd docker-dante-srvr || exit 1

# --- –°–û–•–†–ê–ù–ï–ù–ò–ï config.env ---
echo "üíæ –°–æ–∑–¥–∞—é config.env..."
cat <<EOF > config.env
PORT=$PORT
USERNAME=$USERNAME
PASSWORD=$PASSWORD
EOF

# --- IPTABLES ---
echo "üì° –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ iptables: $PORT"
iptables -I INPUT -p tcp --dport "$PORT" -j ACCEPT || {
  echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Ä—Ç. –í–æ–∑–º–æ–∂–Ω–æ, iptables –æ—Ç–∫–ª—é—á–µ–Ω –∏–ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–∞–≤–∏–ª–æ."
}

# --- –ï–©–Å –†–ê–ó –ü–†–û–í–ï–†–ö–ê DOCKER –ü–ï–†–ï–î –°–ë–û–†–ö–û–ô ---
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ docker.sock –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π..."
if ! docker info >/dev/null 2>&1; then
  echo "‚ùå Docker –¥–µ–º–æ–Ω —Å–Ω–æ–≤–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ü—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑..."
  systemctl restart docker
  sleep 5
  if ! docker info >/dev/null 2>&1; then
    echo "üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Docker. –ó–∞–≤–µ—Ä—à–∞–µ–º."
    exit 1
  fi
fi

# --- –°–ë–û–†–ö–ê ---
echo "üê≥ –°–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞..."
docker build -t dante-proxy-auto .

# --- –ó–ê–ü–£–°–ö ---
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ socks5..."
docker rm -f socks5 2>/dev/null || true
docker run -d --restart=always --network host --env-file=config.env --name socks5 dante-proxy-auto

# --- SYSTEMD ---
echo "üõ† –£—Å—Ç–∞–Ω–æ–≤–∫–∞ systemd-—Å–µ—Ä–≤–∏—Å–∞..."
cp dante-docker.service /etc/systemd/system/
systemctl daemon-reexec
systemctl enable dante-docker
systemctl start dante-docker

# --- –ì–û–¢–û–í–û ---
echo -e "\n‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
echo "üü¢ –ü—Ä–æ–∫—Å–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É: $PORT"
echo "üîê –õ–æ–≥–∏–Ω: $USERNAME"
echo "üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: socks5"
